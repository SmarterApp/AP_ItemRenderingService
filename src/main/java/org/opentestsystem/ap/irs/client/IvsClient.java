/*
 * Copyright 2017 Regents of the University of California. Licensed under the Educational Community License, Version  2.0 (the "license"); you may not use this file except in compliance with the License. You may obtain a copy of the license at
 *
 * https://opensource.org/licenses/ECL-2.0
 *
 * Unless required under applicable law or agreed to in writing, software distributed under the License is distributed in an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for specific language governing permissions and limitations under the license.
 */

package org.opentestsystem.ap.irs.client;

import org.apache.http.client.HttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;
import org.opentestsystem.ap.irs.config.IvsServiceProperties;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;

/**
 * Created by alexponce on 6/21/17.
 */
@Component
public class IvsClient {

    private static String EMPTY = "";

    private final IvsServiceProperties ivsServiceProps;

    @Autowired
    public IvsClient(final IvsServiceProperties ivsProps) {
        ivsServiceProps = ivsProps;
    }
    
    public String getRenderUrl(String itemDirectory, String bankKey, String itemId) {
        String loadFrom = ivsServiceProps.getInternalContentDir() + '/' + itemDirectory;
        return ivsServiceProps.getExternalHost()
                + ivsServiceProps.getItemMapping()
                + "/" + bankKey
                + "-" + itemId
                + "?loadFrom=" + loadFrom;
    }

    private RestTemplate getPooledRestTemplate() {
        PoolingHttpClientConnectionManager manager = new PoolingHttpClientConnectionManager();
        manager.setDefaultMaxPerRoute(5);
        manager.setMaxTotal(5);
        HttpClient client = HttpClients.createMinimal(manager);
        return new RestTemplate(new HttpComponentsClientHttpRequestFactory(client));
    }
}
